esphome:
  name: gaszaehler
  friendly_name: Gaszaehler

esp8266:
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "EPxJYZM4LNkQcnYJvrrm9xxHsfYM8b+uMjrfUBtO5UE="

ota:
  password: "f960c04ce540768d275043334f427849"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Gaszaehler Fallback Hotspot"
    password: "9DxUBHcnFRCH"

captive_portal:
globals:
  #counter für die impulse normal
  - id: total_pulses1
    type: int
    restore_value: false
    initial_value: '0'


# vom Gaszaehler der Faktor pro Impuls; bei mir 1 imp = 0,01m³
  - id: imp_ratio
    type: float
    restore_value: false
    initial_value: '0.01'  
  
binary_sensor:

# Sensor zählt, ob ein "klick" beim Gaszähler erfolgt ist. Auf Basis eines Eingang Impulses
  - platform: gpio
    id: internal_pulse_counter
    pin:
      number: D1
      mode: INPUT_PULLUP
    name: "Live-Impuls"
    filters:
     - delayed_on: 150ms
# Wert einstellen zwischen 50ms und 1.5 s

    on_press:         
      then:
        - lambda: id(total_pulses1) += 1;


# schaut, ob der ESP8266 online ist   
  - platform: status
    name: "gasmeter Status"


sensor:

# zählt alle Impulse hoch, jedoch die von der zweiten Berechnungsmethode und rechnet diese um in m³ 
  - platform: template
    name: "GasverbrauchPuls"
    device_class: gas
    unit_of_measurement: "m³"
    state_class: "total_increasing"
    icon: "mdi:fire"
    accuracy_decimals: 2
    lambda: |-
      return id(total_pulses1) * id(imp_ratio);
      ESP_LOGD("Gaszähler analog TAG", "Pulse bisher: %d", id(total_pulses1));


# zählt alle Impulse hoch, umrechnung in kWh (mal 10)
  - platform: template
    name: "Gasverbrauch-kWh"
    device_class: gas
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    icon: "mdi:fire"
    accuracy_decimals: 2
    lambda: |-
      return id(total_pulses1) * id(imp_ratio) * 10;
      ESP_LOGD("Gaszähler kWh TAG", "Pulse bisher: %d", id(total_pulses1));


  - platform: pulse_counter
    pin: D1
    name: "Pulse Counter"
    icon: "mdi:pulse"    
